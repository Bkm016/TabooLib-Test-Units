buildscript {
    repositories {
        maven {
            url uri("/Users/sky/Desktop/repo")
        }
    }
    dependencies {
        classpath 'io.izzel.taboolib:taboolib-gradle-plugin:1.7'
    }
}

plugins {
    id 'java'
    id 'maven'
//    id 'io.izzel.taboolib' version '1.4'
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
}

apply plugin: 'io.izzel.taboolib'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = 'io.izzel.testunits'
version = '1.0.0'

taboolib {
    description {
        contributors {
            name 'Bkm016' description 'TabooLib Developer'
            name 'CziSky' description 'TabooLib Developer'
        }
        dependencies {
            name 'Adyeshach'
            name 'Chemdah' with 'bukkit' optional true
            name 'spongeapi' version '7.2.0' with 'sponge7'
            name 'spongeapi' version '8.0.0' with 'sponge8' loadafter true
            name 'ic3' with 'sponge7' mod true
        }
    }
    install 'common'
    install 'common-5'
    install 'module-nms'
    install 'module-nms-util'
    install 'module-chat'
    install 'module-lang'
    install 'module-kether'
    install 'module-database'
    install 'module-porticus'
    install 'module-navigation'
    install 'module-configuration'
    install 'platform-bukkit', 'platform-bungee', 'platform-nukkit', 'platform-sponge', 'platform-velocity'
    install 'platform-sponge-api7', 'platform-sponge-api8'
    version 'test-600-9'
}

repositories {
    maven {
        url uri("/Users/sky/Desktop/repo")
    }
    mavenCentral()
}

dependencies {
    implementation 'ink.ptms.core:v11605:11605'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation fileTree(dir: 'libs', includes: ['*.jar'])
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${rootProject.name}" }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: project.findProperty('repository')) {
                authentication(userName: project.findProperty('user'), password: project.findProperty('password'))
            }
            pom.artifactId = rootProject.name
            pom.groupId = project.group
            pom.version = project.version
            pom.packaging = 'jar'
        }
    }
}